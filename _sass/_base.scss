%text_cursor {
  cursor: text;
}

%full_size {
  width: 100%;
  height: 100%;
}

%auto_side_margin {
  margin-left: auto;
  margin-right: auto;
}

%no_text_decoration {
  text-decoration: none;
}

@mixin size($size) {
  width: $size;
  height: $size;
}

@mixin on-event {
  &:hover,
  &:active,
  &:focus {
      @content;
  }
}

@mixin with-events {
  &,
  &:hover,
  &:active,
  &:focus {
      @content;
  }
}

@mixin vendors($property, $value, $vendors...) {
  #{$property}: $value;
  
  @each $vendor in $vendors {
    #{'-' + $vendor + '-' + $property}: $value;
  }
}

%no_select {
  @include vendors(user-select, none, webkit);
}

@mixin with-vendors($mapping, $vendors...) {
  @each $property, $value in $mapping {
    #{$property}: $value;
    
    @each $vendor in $vendors {
      #{'-' + $vendor + '-' + $property}: $value;
    }
  }
}

@function css_var($name, $fallback: null) {
  @if ($fallback != null) {
    @return var(--#{$name}, $fallback);
  } @else {
    @return var(--#{$name});
  }
}

@mixin to_css_vars($mapping) {
  @each $name, $value in $mapping {
    #{'--' + $name}: $value;
  }
}

@mixin when-is($selectors, $prefix: '', $suffix: '') {
  @each $selector in $selectors {
    @at-root #{$prefix + $selector + $suffix + &} {
      @content;
    }
  }
}

@mixin when-is-class($selectors...) {
  @include when-is($selectors, '.') {
    @content;
  }
}

@mixin when-parent($selectors...) {
  @include when-is($selectors, '', ' > ') {
    @content;
  }
}

@mixin when-parent-not($selectors...) {
  @include when-is($selectors, ':not(', ') > ') {
    @content;
  }
}

@function icon($name, $type: svg) {
  @return url("/assets/icons/#{$name}.#{$type}");
}

@function image($name, $type: png) {
  @return url("/assets/images/#{$name}.#{$type}");
}

@function google_font($query) {
  @return url("https://fonts.googleapis.com/css?family=#{query}");
}
